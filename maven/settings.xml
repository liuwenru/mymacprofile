<?xml version="1.0" encoding="utf-8"?>
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
  <!-- localRepository
         The path to the local repository maven will use to store artifacts. 构建系统本地仓库的路径
         Default: ${user.home}/.m2/repository
        <localRepository>/Users/meros/Documents/.m2/repository</localRepository>
  -->
  <!-- interactiveMode
         This will determine whether maven prompts you when it needs input. If set to false,
         maven will use a sensible default value, perhaps based on some other setting, for
         the parameter in question.
        maven是否需要和用户交互以获得输入。如果maven需要和用户交互以获得输入，则设置成true，反之则应为false。默认为true。
         Default: true
        <interactiveMode>true</interactiveMode>
  -->
  <!-- offline
         Determines whether maven should attempt to connect to the network when executing a build.
         This will have an effect on artifact downloads, artifact deployment, and others.
         maven是否需要在离线模式下运行
         Default: false
        <offline>false</offline>
  -->
  <!-- pluginGroups
         This is a list of additional group identifiers that will be searched when resolving plugins by
  their prefix, i.e.
         when invoking a command line like "mvn prefix:goal". Maven will automatically add the group
  identifiers
         "org.apache.maven.plugins" and "org.codehaus.mojo" if these are not already contained in the list.
  -->
  <pluginGroups>
    <!-- pluginGroup
        Specifies a further group identifier to use for plugin lookup.
        当插件的 groupId 没有显式提供时，供搜寻插件 groupId 的列表。使用某个插件，如果没有指定 groupId 的时候，maven 就会使用该列表。
        默认情况下该列表包含了 org.apache.maven.plugins 和 org.codehaus.mojo 
        <pluginGroup>com.your.plugins</pluginGroup>
    -->
  </pluginGroups>
  <!-- proxies
        This is a list of proxies which can be used on this machine to connect to the network.
        Unless otherwise specified (by system property or command-line switch), the first proxy
        specification in this list marked as active will be used.
    -->
  <proxies>
    <proxy>
      <!-- 代理的唯一定义符，用来区分不同的代理元素 -->
      <id>localproxy</id>
      <!-- 是否激活。当我们声明了一组代理，而某个时候只需要激活一个代理的时候 -->
      <active>false</active>
      <!-- 代理的协议 -->
      <protocol>http</protocol>
      <!-- 代理的主机名 -->
      <host>127.0.0.1</host>
      <!-- 代理的端口 -->
      <port>1080</port>
      <!-- 代理的用户名，用户名和密码表示代理服务器认证的登录名和密码 -->
      <!-- <username>proxyuser</username> -->
      <!-- 代理的密码 -->
      <!-- <password>somepassword</password> -->
      <!-- 不该被代理的主机名列表。该列表的分隔符由代理服务器指定；例子中使用了竖线分隔符，逗号分隔也很常见 -->
      <nonProxyHosts>127.0.0.1|192.*.*.*</nonProxyHosts>
    </proxy>
  </proxies>
  <!-- servers
        This is a list of authentication profiles, keyed by the server-id used within the system.
        Authentication profiles can be used whenever maven must make a connection to a remote server.
        配置服务端的一些设置。如安全证书之类的信息应该配置在 settings.xml 文件中，避免配置在 pom.xml 中
        <server> 
            这是 server 的 id（注意不是用户登陆的 id），该 id 与 distributionManagement 中 repository 元素的 id 相匹配 
          <id>server001</id>
            鉴权用户名 
          <username>my_login</username> 
            鉴权密码 
          <password>my_password</password> 
            鉴权时使用的私钥位置。默认是 ${user.home}/.ssh/id_dsa 
          <privateKey>${usr.home}/.ssh/id_dsa</privateKey> 
            鉴权时使用的私钥密码 
          <passphrase>some_passphrase</passphrase> 
            文件被创建时的权限。如果在部署的时候会创建一个仓库文件或者目录，这时候就可以使用该权限。其对应了 unix 文件系统的权限，如：664、775 
          <filePermissions>664</filePermissions> 
            目录被创建时的权限 
          <directoryPermissions>775</directoryPermissions>
        </server> 
    -->
  <servers>
    <!-- <server>
      <id>epoint-nexus</id>
      <username>epointyanfa</username>
      <password>epoint_yanfa</password>
    </server> -->
    <server>
      <id>epoint-nexus</id>
      <username>admin</username>
      <password>Epoint491001!@</password>
    </server>
    <server>
      <id>release_cn-north-4_d27a3c3ea8db47b5a63082e586718a9c_maven_1_1</id>
      <username>cn-north-4_d27a3c3ea8db47b5a63082e586718a9c_85fdade4f42b4167abd0132135360d71</username>
      <password>f7Z=b_5KjV</password>
    </server>
    <server>
      <id>snapshot_cn-north-4_d27a3c3ea8db47b5a63082e586718a9c_maven_2_1</id>
      <username>cn-north-4_d27a3c3ea8db47b5a63082e586718a9c_85fdade4f42b4167abd0132135360d71</username>
      <password>f7Z=b_5KjV</password>
    </server>
  </servers>
  <mirrors>
    <!-- 中央仓库在中国的镜像 -->
    <!-- <mirror>
      <id>maven.net.cn</id>
      <name>oneof the central mirrors in china</name>
      <url>https://repo1.maven.org/maven2/</url>
      <mirrorOf>*</mirrorOf>
    </mirror> -->
  </mirrors>
  <!-- 根据环境参数来调整构建配置的列表。对应 pom.xml 中 profile 元素（只包含
  id、activation、repositories、pluginRepositories 和
  properties 元素）
        如果一个 settings.xml 中的 profile 被激活，它的值会覆盖任何定义在 pom.xml 中带有相同 id 的 profile -->
  <profiles>
    <profile>
      <id>chinamaven</id>
      <repositories>
        <repository>
          <id>chinamaven</id>
          <name>chinamaven</name>
          <url>https://repo1.maven.org/maven2/</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>apachemaven</id>
          <name>apachemaven</name>
          <url>https://repo.maven.apache.org/maven2/</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <properties>
        <!-- 如果该 profile 被激活，则可以在 pom.xml 中使用 ${user.install} -->
        <user.install>${user.home}/our-project</user.install>
      </properties>
      <pluginRepositories>
        <pluginRepository>
          <id>chinamaven</id>
          <name>chinamaven</name>
          <url>https://repo1.maven.org/maven2/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>aliyun</id>
      <repositories>
        <repository>
          <id>central</id>
          <url>https://maven.aliyun.com/repository/central</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>jcenter</id>
          <url>https://maven.aliyun.com/repository/jcenter</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <!-- <repository>
          <id>spring-plugin</id>
          <url>https://maven.aliyun.com/repository/spring-plugin</url>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>daily</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository> -->
        <!-- <repository>
          <id>spring</id>
          <url>https://maven.aliyun.com/repository/spring</url>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>daily</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository> -->
        <repository>
          <id>gradle-plugin</id>
          <url>https://maven.aliyun.com/repository/gradle-plugin</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>google</id>
          <url>https://maven.aliyun.com/repository/google</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>public</id>
          <url>https://maven.aliyun.com/repository/public</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
      <properties>
        <!-- 如果该 profile 被激活，则可以在 pom.xml 中使用 ${user.install} -->
        <user.install>${user.home}/our-project</user.install>
      </properties>
      <pluginRepositories>
        <pluginRepository>
          <id>aliyunmaven</id>
          <name>Aliyun Maven</name>
          <url>https://maven.aliyun.com/repository/public</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>epoint-nexus</id>
      <repositories>
        <repository>
          <id>epoint-nexus</id>
          <name>Epoint Nexus Repository</name>
          <url>https://192.168.188.146:9000/repository/epoint/</url>
          <!-- <url>http://192.168.0.99:8081/nexus/content/groups/public/</url> -->
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>chinamaven</id>
          <name>chinamaven</name>
          <url>https://repo1.maven.org/maven2/</url>
          <releases>
            <enabled>true</enabled>
            <!-- 该元素指定更新发生的频率。maven 会比较本地 pom.xml 和远程 pom.xml 的时间戳。
              这里的选项是：always（一直），daily（默认，每日），interval：X（这里 X 是以分钟为单位的时间间隔），或者 never（从不）。 -->
            <updatePolicy>daily</updatePolicy>
            <!-- 当 maven 验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者 warn（警告）-->
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>epoint-nexus</id>
          <name>Epoint Nexus Repository</name>
          <!-- <url>http://192.168.0.99:8081/nexus/content/groups/public/</url> -->
          <url>https://192.168.188.146:9000/repository/epoint/</url>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
        <pluginRepository>
          <id>chinamaven</id>
          <name>chinamaven</name>
          <url>https://repo1.maven.org/maven2/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
  <activeProfiles>
    <activeProfile>aliyun</activeProfile>
    <activeProfile>chinamaven</activeProfile>
    <activeProfile>epoint-nexus</activeProfile>
  </activeProfiles>
</settings>
